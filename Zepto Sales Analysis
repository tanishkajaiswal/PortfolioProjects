-- Drop existing table if it exists
DROP TABLE IF EXISTS zepto;

-- Create Zepto table
CREATE TABLE zepto (
  sku_id SERIAL PRIMARY KEY,
  category VARCHAR(120),
  name VARCHAR(150) NOT NULL,
  mrp NUMERIC(8,2),
  discountPercent NUMERIC(5,2),
  availableQuantity INTEGER,
  discountedSellingPrice NUMERIC(8,2),
  weightInGms INTEGER,
  outOfStock BOOLEAN,	
  quantity INTEGER
);

-- -------------------------------
-- DATA EXPLORATION
-- -------------------------------

-- 1. Count total rows
SELECT COUNT(*) FROM zepto;

-- 2. Preview sample data
SELECT * FROM zepto
LIMIT 10;

-- 3. Check for NULL values
SELECT * FROM zepto
WHERE name IS NULL
  OR category IS NULL
  OR mrp IS NULL
  OR discountPercent IS NULL
  OR discountedSellingPrice IS NULL
  OR weightInGms IS NULL
  OR availableQuantity IS NULL
  OR outOfStock IS NULL
  OR quantity IS NULL;

-- 4. List distinct product categories
SELECT DISTINCT category
FROM zepto
ORDER BY category;

-- 5. Count of in-stock vs out-of-stock products
SELECT outOfStock, COUNT(sku_id) AS total_products
FROM zepto
GROUP BY outOfStock;

-- 6. Check for duplicate product names (multiple SKUs)
SELECT name, COUNT(sku_id) AS number_of_skus
FROM zepto
GROUP BY name
HAVING COUNT(sku_id) > 1
ORDER BY number_of_skus DESC;

-- -------------------------------
-- DATA CLEANING
-- -------------------------------

-- 1. Identify products with zero price
SELECT * FROM zepto
WHERE mrp = 0 OR discountedSellingPrice = 0;

-- 2. Remove entries with zero MRP
DELETE FROM zepto
WHERE mrp = 0;

-- 3. Convert prices from paise to rupees
UPDATE zepto
SET mrp = mrp / 100.0,
    discountedSellingPrice = discountedSellingPrice / 100.0;

-- -------------------------------
-- DATA ANALYSIS
-- -------------------------------

-- Q1. Top 10 best-value products based on highest discount %
SELECT DISTINCT name, mrp, discountPercent
FROM zepto
ORDER BY discountPercent DESC
LIMIT 10;

-- Q2. High MRP but Out of Stock products
SELECT DISTINCT name, mrp
FROM zepto
WHERE outOfStock = TRUE AND mrp > 300
ORDER BY mrp DESC;

-- Q3. Estimated revenue per category
SELECT category,
       SUM(discountedSellingPrice * availableQuantity) AS total_revenue
FROM zepto
GROUP BY category
ORDER BY total_revenue DESC;

-- Q4. Premium products with low discounts
SELECT DISTINCT name, mrp, discountPercent
FROM zepto
WHERE mrp > 500 AND discountPercent < 10
ORDER BY mrp DESC, discountPercent DESC;

-- Q5. Top 5 categories by average discount %
SELECT category,
       ROUND(AVG(discountPercent), 2) AS avg_discount
FROM zepto
GROUP BY category
ORDER BY avg_discount DESC
LIMIT 5;

-- Q6. Price per gram analysis for products above 100g
SELECT DISTINCT name, weightInGms, discountedSellingPrice,
       ROUND(discountedSellingPrice / weightInGms, 2) AS price_per_gram
FROM zepto
WHERE weightInGms >= 100
ORDER BY price_per_gram;

-- Q7. Classify products by weight category
SELECT DISTINCT name, weightInGms,
       CASE 
         WHEN weightInGms < 1000 THEN 'Low'
         WHEN weightInGms < 5000 THEN 'Medium'
         ELSE 'Bulk'
       END AS weight_category
FROM zepto;

-- Q8. Total inventory weight per category
SELECT category,
       SUM(weightInGms * availableQuantity) AS total_weight
FROM zepto
GROUP BY category
ORDER BY total_weight DESC;
